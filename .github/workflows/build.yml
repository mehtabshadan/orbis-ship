name: Build Next.js Application

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  release:
    types: [created, published]
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Get version from package.json
        id: get_version
        shell: pwsh
        run: |
          $packageJson = Get-Content "package.json" | ConvertFrom-Json
          $version = $packageJson.version
          Write-Output "VERSION=$version" >> $env:GITHUB_ENV
          Write-Output "Package version: $version"

      - name: Create build archive
        shell: pwsh
        run: |
          $archiveName = "orbis-${{ env.VERSION }}.zip"
          
          # Create a temporary directory for the package
          $packageDir = "package"
          New-Item -ItemType Directory -Force -Path $packageDir
          
          # Copy only the two essential folders as per build-packager.ps1
          
          # 1. Copy .next/standalone directory (the main application)
          if (Test-Path ".next/standalone") {
            Copy-Item -Path ".next/standalone" -Destination "$packageDir/.next/standalone" -Recurse -Force
            Write-Output "Copied .next/standalone directory"
          }
          
          # 2. Copy public directory (static assets)
          if (Test-Path "public") {
            Copy-Item -Path "public" -Destination "$packageDir/public" -Recurse -Force
            Write-Output "Copied public directory"
          }
          
          # Create ZIP from the package directory
          Compress-Archive -Path "$packageDir/*" -DestinationPath $archiveName -Force
          
          # Clean up
          Remove-Item $packageDir -Recurse -Force
          
          Write-Output "Created build archive: $archiveName with only essential folders"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: orbis-${{ env.VERSION }}
          path: orbis-${{ env.VERSION }}.zip
          retention-days: 30

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: orbis-${{ env.VERSION }}.zip
          name: "Orbis Ship v${{ env.VERSION }}"
          body: |
            ## Orbis Ship Release v${{ env.VERSION }}
            
            **Built from commit:** ${{ github.sha }}
            **Build date:** ${{ github.run_started_at }}
            
            ### üì¶ What's included:
            - Complete Next.js standalone application
            - Public static assets
            - Ready for deployment on Windows machines
            
            ### üöÄ Installation:
            1. Download the `orbis-${{ env.VERSION }}.zip` file
            2. Extract to your desired location
            3. Run the extracted application
            
            ### üìä Package Info:
            - **Size:** ~18MB
            - **Runtime:** Node.js (standalone, no installation required)
            - **Platform:** Windows
            
            ---
            Built with ‚ù§Ô∏è using GitHub Actions
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Latest Development Release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          files: orbis-${{ env.VERSION }}.zip
          name: "Orbis Ship Latest (v${{ env.VERSION }})"
          body: |
            ## Orbis Ship Latest Development Build
            
            **üîÑ Automatically updated from main branch**
            **Version:** v${{ env.VERSION }}
            **Built from commit:** ${{ github.sha }}
            **Build date:** ${{ github.run_started_at }}
            
            This is the latest development build from the main branch. This release is automatically updated with each push to main.
            
            ### üì¶ What's included:
            - Complete Next.js standalone application
            - Public static assets
            - Ready for deployment on Windows machines
            
            ### üöÄ Installation:
            1. Download the `orbis-${{ env.VERSION }}.zip` file
            2. Extract to your desired location
            3. Run the extracted application
            
            ---
            Built with ‚ù§Ô∏è using GitHub Actions
          tag_name: latest
          draft: false
          prerelease: true
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
